// Place your key bindings in this file to override the defaults
[
  {
    "key": "cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "cmd+-",
    "command": "editor.action.fontZoomOut"
  },
  // {
  //   "key": "ctrl+k",
  // 	"command": "editor.action.moveLinesUpAction",
  //   "when": "editorTextFocus && !editorReadonly"
  // },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.moveLinesUpAction"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.rename"
  },
  {
    "key": "cmd+[Slash]",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+7",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+c",
    "command": "calva.clearInlineResults",
    "when": "calva:keybindingsEnabled && editorTextFocus && !editorHasMultipleSelections && !editorHasSelection && !editorReadOnly && !hasOtherSuggestions && !parameterHintsVisible && !selectionAnchorSet && !suggestWidgetVisible && editorLangId == 'clojure'"
  },
  {
    "key": "alt+m",
    "command": "workbench.action.terminal.sendSequence",
    "args": {"text": "clear && ruby path_to_enlightenment.rb\n"},
    "when": "editorLangId == 'ruby'"
  },
  {
    "key": "cmd+k",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode && !terminalFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": ",",
    "command": "whichkey.triggerKey",
    "when": "whichkeyVisible && !editorTextFocus"
  },
  {
    "key": "tab",
    "command": "-whichkey.triggerKey",
    "when": "whichkeyVisible"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "alt+cmd+h",
    "command": "-rest-client.history"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "args": "<C-d>",
    "command": "vscode-neovim.send",
    "key": "cmd+d",
    "when": "editorFocus && neovim.init"
  },
  {
    "args": "<C-d>",
    "command": "vscode-neovim.send",
    "key": "ctrl+d",
    "when": "editorFocus && neovim.init"
},
{
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
        "text": "\\\r\n"
    },
    "when": "terminalFocus"
},
{
  "key": "cmd+i",
  "command": "composerMode.agent"
},
{
  "key": "cmd+i",
  "command": "composerMode.agent"
}
]
